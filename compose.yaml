services:
  traefik:
    image: traefik
    command:
      - --providers.docker=true
      - --providers.docker.network=traefik
      - --providers.docker.exposedbydefault=false
      - --providers.docker.defaultRule={{ index .Labels "traefik.rule" }}
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls.certResolver=tls
      - --entrypoints.https.http.middlewares=hsts@docker,no-www@docker
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --certificatesresolvers.tls.acme.tlschallenge=true
      - --certificatesresolvers.tls.acme.storage=/acme/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.service=noop@internal
      - traefik.http.routers.traefik.entrypoints=http
      - traefik.http.routers.traefik.rule=Host("invalid.invalid")
      - traefik.http.middlewares.hsts.headers.stsseconds=31536000
      - traefik.http.middlewares.hsts.headers.stsincludesubdomains=true
      - traefik.http.middlewares.hsts.headers.stspreload=true
      - traefik.http.middlewares.no-www.redirectregex.regex=^https?://www.(.*)
      - traefik.http.middlewares.no-www.redirectregex.replacement=https://$${1}
      - traefik.http.middlewares.no-www.redirectregex.permanent=true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./acme:/acme
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik

  whoami:
    image: traefik/whoami
    labels:
      traefik.enable: true
      traefik.rule: Host(
          "test.example",
          "test2.example",
        ) && Path("/whoami")
    networks:
      - traefik
      - internal

networks:
  traefik:
    name: traefik
  internal:
